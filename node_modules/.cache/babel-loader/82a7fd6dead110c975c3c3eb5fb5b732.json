{"ast":null,"code":"var _jsxFileName = \"/home/edxan77/search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [val, setval] = useState(\"\");\n  const [getValue, setgetValue] = useState([]);\n\n  const getVal = function (e) {\n    setval(e.target.value.replace(/ /gi, '+'));\n  };\n\n  const clickGetval = function () {\n    fetch(`http://openlibrary.org/search.json?q=${val}&page=1`).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setgetValue([...getValue.flat(1), json.docs]);\n    });\n  };\n\n  console.log(val);\n  console.log(getValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onInput: getVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickGetval,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: getValue.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.docs.title\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oy7ILdVRDRfbyCWULj3WdVuUpSg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/edxan77/search/src/App.js"],"names":["useEffect","useState","App","val","setval","getValue","setgetValue","getVal","e","target","value","replace","clickGetval","fetch","then","res","json","flat","docs","console","log","map","item","index","title","Math","random"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,GAAD,EAAOC,MAAP,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACI,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMM,MAAM,GAAG,UAASC,CAAT,EAAW;AAEtBJ,IAAAA,MAAM,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,GAA9B,CAAD,CAAN;AAEH,GAJD;;AAKA,QAAMC,WAAW,GAAG,YAAU;AACxBC,IAAAA,KAAK,CAAE,wCAAuCV,GAAI,SAA7C,CAAL,CACCW,IADD,CACM,UAASC,GAAT,EAAa;AACjB,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHD,EAICF,IAJD,CAIM,UAASE,IAAT,EAAc;AAChBV,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAACY,IAAT,CAAc,CAAd,CAAJ,EAAqBD,IAAI,CAACE,IAA1B,CAAD,CAAX;AAGH,KARD;AAWL,GAZD;;AAeAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,OAAO,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAIK,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA,gBACGP,QAAQ,CAACgB,GAAT,CAAa,UAASC,IAAT,EAAcC,KAAd,EAAoB;AAChC,4BACA;AAAA,oBAAyBD,IAAI,CAACJ,IAAL,CAAUM;AAAnC,WAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,gBADA;AAGD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzCQxB,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\nconst [val , setval] = useState(\"\")\nconst [getValue,setgetValue] = useState([])\n\nconst getVal = function(e){\n\n    setval(e.target.value.replace(/ /gi, '+'))\n\n}\nconst clickGetval = function(){\n      fetch(`http://openlibrary.org/search.json?q=${val}&page=1`)\n      .then(function(res){\n        return res.json()\n      })\n      .then(function(json){\n          setgetValue([...getValue.flat(1),json.docs])\n          \n          \n      })\n\n\n}\n\n\nconsole.log(val)\nconsole.log(getValue)\n\n  return (\n    <div className=\"App\">\n      <input type=\"text\" onInput={getVal}></input>\n      <button onClick = {clickGetval}>Search</button>\n\n      <ul>\n        {getValue.map(function(item,index){\n          return(\n          <li key={Math.random()}>{item.docs.title}</li>\n          )\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}